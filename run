#!/bin/bash
# This script acts like a wrapper around the assembler-start-script!
# This script takes only 1 parameter ($1) which belongs to the given task 
# (e.g. "default" coming from -> /Taskfile)
#
# The Taskfile needs to get added within the Dockerfile to a position of
# your choice!

set -o errexit
set -o nounset

READS="$@"

# The second argument is a directory with write-access where the final
# assembly should be written to.
OUTPUT_DIR=/bbx/output

# The assembly should be written to the file "contigs.fa" in the output directory
ASSEMBLY=$OUTPUT_DIR/contigs.fa

# Setup logging
LOG=$OUTPUT_DIR/log.txt
exec > >(tee ${LOG})
exec 2>&1

TMP_DIR=`mktemp -d`
cd ${TMP_DIR}

MEM=$(echo "900 * $(grep MemTotal /proc/meminfo | awk '{print $2}')" | bc)
MAX_READ_LENGTH=`zcat ${READS} | head -n2 | tail -1| wc -L`

python ${MEGAHIT_DIR}/megahit ${FLAGS} --cpu-only --input-cmd "zcat ${READS}" -m ${MEM} -l ${MAX_READ_LENGTH}

cp ${TMP_DIR}/megahit_out/final.contigs.fa ${ASSEMBLY}
